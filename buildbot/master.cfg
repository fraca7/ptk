# -*- python -*-

c = BuildmasterConfig = {}

with file('.password', 'rb') as fileobj:
    password = fileobj.readlines()[0].strip()

####### BUILDSLAVES

from buildbot.buildslave import BuildSlave
c['slaves'] = [BuildSlave('Ubuntu', password),
               BuildSlave('OSX', password),
               BuildSlave('WinXP', password)]

c['slavePortnum'] = 8203

####### CHANGESOURCES

from buildbot.plugins import changes
c['change_source'] = changes.HgPoller(repourl='https://bitbucket.org/fraca7/ptk', workdir='hg-poller')

####### SCHEDULERS

from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler, FixedParameter
from buildbot.changes import filter
c['schedulers'] = []
c['schedulers'].append(SingleBranchScheduler(
                            name='default',
                            change_filter=filter.ChangeFilter(branch='default'),
                            treeStableTimer=None,
                            builderNames=['ubuntu', 'osx', 'winxp']))
c['schedulers'].append(ForceScheduler(
                            name='force',
                            builderNames=['ubuntu', 'osx', 'winxp'],
                            properties=[FixedParameter(name='branch', default='default')]))

####### BUILDERS

from buildbot.process.factory import BuildFactory
from buildbot.steps.source import Mercurial
from buildbot.steps.shell import ShellCommand
from buildbot.process.properties import WithProperties
from buildbot.steps.transfer import DirectoryUpload, FileUpload


class UnitTests(ShellCommand):
    workdir = 'build'
    command = ['tox']


class Coverage(ShellCommand):
    workdir = 'build'
    command = ['make', 'coverage']

    def __init__(self, **kwargs):
        kwargs['env'] = dict(PYTHON='python')
        super(Coverage, self).__init__(**kwargs)


class UploadCoverage(DirectoryUpload):
    def __init__(self, **kwargs):
        kwargs['slavesrc'] = 'htmlcov'
        kwargs['masterdest'] = WithProperties('/var/www/ptk/coverage/%s', 'slavename')
        kwargs['url'] = WithProperties('https://jeromelaheurte.net/ptk/coverage/%s/', 'slavename')
        DirectoryUpload.__init__(self, **kwargs)


class Pylint(ShellCommand):
    workdir = 'build'
    command = ['make', 'lint']

    def __init__(self, **kwargs):
        kwargs['env'] = dict(PYTHON='python')
        super(Pylint, self).__init__(**kwargs)


class UploadPylint(FileUpload):
    def __init__(self, **kwargs):
        kwargs['slavesrc'] = 'lint.html'
        kwargs['masterdest'] = WithProperties('/var/www/ptk/lint-%s.html', 'slavename')
        kwargs['url'] = WithProperties('https://jeromelaheurte.net/ptk/lint-%s.html', 'slavename')
        FileUpload.__init__(self, **kwargs)


from buildbot.config import BuilderConfig
c['builders'] = []

for slaveName in ['Ubuntu', 'OSX', 'WinXP']:
    factory = BuildFactory()
    factory.addStep(Mercurial(repourl='https://jeromelaheurte.net/mercurial/ptk', branchType='inrepo', mode='clobber'))
    factory.addStep(UnitTests())
    factory.addStep(Coverage())
    factory.addStep(UploadCoverage())
    factory.addStep(Pylint())
    factory.addStep(UploadPylint())
    c['builders'].append(BuilderConfig(name=slaveName.lower(), slavenames=[slaveName], factory=factory))


####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz, auth
from buildbot.status.mail import MailNotifier

authz_cfg=authz.Authz(
    auth=auth.BasicAuth([('ptk', password)]),
    gracefulShutdown = 'auth',
    forceBuild = 'auth',
    forceAllBuilds = 'auth',
    pingBuilder = 'auth',
    stopBuild = 'auth',
    stopAllBuilds = 'auth',
    cancelPendingBuild = 'auth',
)
c['status'].append(html.WebStatus(http_port=8204, authz=authz_cfg))

####### PROJECT IDENTITY

c['title'] = 'PTK'
c['titleURL'] = 'https://jeromelaheurte.net/ptk/'

c['buildbotURL'] = 'https://jeromelaheurte.net/buildbot/ptk/'

####### DB URL

c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
